{
  parserClass="org.legendofdragoon.fatescript.psi.FateScriptParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="FateScript"
  psiImplClassSuffix="Impl"
  psiPackage="org.legendofdragoon.fatescript.psi"
  psiImplPackage="org.legendofdragoon.fatescript.psi.impl"

  elementTypeHolderClass="org.legendofdragoon.fatescript.psi.FateScriptTypes"
  elementTypeClass="org.legendofdragoon.fatescript.psi.FateScriptElementType"
  tokenTypeClass="org.legendofdragoon.fatescript.psi.FateScriptTokenType"

  tokens=[
    eol='regexp:\n+'
    comment='regexp:;.*'
    cmp='regexp:<=|<|>=|>|==|!=|&|!&'
    scope='regexp:::'
    labelsignifier='regexp::'
    separator='regexp:,'
    bracketopen='regexp:\['
    bracketclose='regexp:]'
    binop='regexp:[+\-*/]'
    id='regexp:[a-zA-Z_]\w*'
    dec='regexp:\d{1,10}'
    hex='regexp:0x[a-fA-F\d]{1,8}'
    datastring='regexp:str\[.*?]'
  ]

//  name(".*expr")='expression'
//  extends(".*expr")=expr
}

root ::= line*
line ::= !<<eof>> (data | rel | entrypoint | code | label)? eol+ {pin=2}

entrypoint ::= "entrypoint" labelRef
rel ::= "rel" labelRef
data ::= "data" (number | datastring)
labelRef ::= labelsignifier id (bracketopen (labelRef |  number | storage) (binop (number | storage))? bracketclose)?
code ::= op !labelsignifier
label ::= id labelsignifier
op ::= id params?
params ::= param ((separator param)+)?
param ::= methodRef | number | inline | var | storage | cmp | id
methodRef ::= id scope id
number ::= dec | hex
inline ::= "inl" bracketopen ((bracketopen storage bracketclose) | labelRef) (binop (inline | number | storage))? bracketclose
var ::= "var" bracketopen number (binop storage)? bracketclose (bracketopen (number | storage) bracketclose)?
storage ::= "stor" bracketopen (number | storage) (separator number)? (binop storage)? bracketclose
