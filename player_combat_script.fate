entrypoint :ENTRYPOINT_0
entrypoint :ENTRYPOINT_1
entrypoint :ENTRYPOINT_2
entrypoint :ENTRYPOINT_3
entrypoint :ENTRYPOINT_4
entrypoint :ENTRYPOINT_5
entrypoint :ENTRYPOINT_6
entrypoint :ENTRYPOINT_7
entrypoint :ENTRYPOINT_8
entrypoint :ENTRYPOINT_9
entrypoint :ENTRYPOINT_10
entrypoint :ENTRYPOINT_11
entrypoint :ENTRYPOINT_12
entrypoint :ENTRYPOINT_13
entrypoint :ENTRYPOINT_14
entrypoint :ENTRYPOINT_15

; SUBROUTINE
LABEL_39:
jmp_cmp !=, 0xffffffff, var[73][31], inl[:LABEL_40] ; operand, left, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_41] ; addr
LABEL_40:
mov var[3], stor[24] ; source, dest
and 0xf000, stor[24] ; right, left
jmp_cmp ==, 0, stor[24], inl[:LABEL_50] ; operand, right, addr
mov 0x0, var[73][31] ; source, dest
jmp inl[:LABEL_41] ; addr
LABEL_50:
incr var[73][31] ; operand
jmp_cmp >=, 0x12c, var[73][31], inl[:LABEL_41] ; operand, left, right, addr
call SMap::scriptSelfGetSobjAnimation, stor[24] ; animIndex
jmp_cmp ==, 0x1f, stor[24], inl[:LABEL_46] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x1f ; animIndex
jmp inl[:LABEL_46] ; addr
LABEL_41:
mov 0x0, stor[25] ; source, dest
mov 0x0, stor[26] ; source, dest
mov 0x0, stor[27] ; source, dest
jmp_cmp ==, 0, var[27], inl[:LABEL_42] ; operand, right, addr
jmp_cmp ==, 0, var[31], inl[:LABEL_42] ; operand, right, addr
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; right, left
jmp_cmp ==, 0, stor[29], inl[:LABEL_43] ; operand, right, addr
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
mov var[28], stor[28] ; source, dest
jmp_cmp <, var[31], 0x7f, inl[:LABEL_43] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
jmp inl[:LABEL_43] ; addr
LABEL_42:
mov 0x0, stor[28] ; source, dest
mov var[3], stor[29] ; source, dest
and 0xf000, stor[29] ; right, left
jmp_cmp ==, 0, stor[29], inl[:LABEL_43] ; operand, right, addr
LABEL_49:
mov inl[:LABEL_47[stor[28]]], stor[30] ; source, dest
jmp_cmp ==, stor[30], 0xffffffff, inl[:LABEL_43] ; operand, left, right, addr
jmp_cmp ==, stor[29], stor[30], inl[:LABEL_48] ; operand, left, right, addr
incr stor[28] ; operand
jmp inl[:LABEL_49] ; addr
LABEL_48:
mul 0x200, stor[28] ; amount, operand
mov 0x4, stor[25] ; source, dest
mov 0x1, stor[27] ; source, dest
jmp_cmp !&, 0x40, var[3], inl[:LABEL_43] ; operand, left, right, addr
mov 0x2, stor[27] ; source, dest
mov 0xc, stor[25] ; source, dest
LABEL_43:
jmp_cmp ==, 0, stor[27], inl[:LABEL_44] ; operand, right, addr
mov stor[28], stor[29] ; source, dest
sin_12 stor[28], stor[28] ; angle, dest
cos_12 stor[29], stor[29] ; angle, dest
mov stor[25], stor[26] ; source, dest
shl 0xc, stor[25] ; right, left
shl 0xc, stor[26] ; right, left
unk_40 stor[28], stor[25] ; ?, ?
unk_40 stor[29], stor[26] ; ?, ?
add 0x800, stor[25] ; amount, operand
add 0x800, stor[26] ; amount, operand
shr 0xc, stor[25] ; right, left
shr 0xc, stor[26] ; right, left
call SMap::scriptCheckPlayerCollision, stor[25], 0x0, stor[26], stor[28] ; deltaX, deltaY, deltaZ, collidee
call SMap::scriptGetPlayerMovement, stor[29], stor[30], stor[31] ; x, y, z
call SMap::scriptSelfFacePoint, stor[29], stor[30], stor[31] ; x, y, z
jmp_cmp ==, stor[28], 0xffffffff, inl[:LABEL_45] ; operand, left, right, addr
mov 0x0, stor[27] ; source, dest
jmp inl[:LABEL_44] ; addr
LABEL_45:
call SMap::scriptMovePlayer, stor[25], 0x0, stor[26] ; x, y, z
LABEL_44:
call SMap::scriptSelfGetSobjAnimation, stor[28] ; animIndex
jmp_cmp ==, stor[28], stor[27], inl[:LABEL_46] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, stor[27] ; animIndex
LABEL_46:
return
LABEL_47:
data 0x1000
data 0x3000
data 0x2000
data 0x6000
data 0x4000
data 0xc000
data 0x8000
data 0x9000
data 0xffffffff

; SUBROUTINE
LABEL_126:
call Scus94491BpeSegment_8002::scriptGetFreeTextboxIndex, stor[26] ; textboxIndex
jmp_cmp ==, 0xffffffff, stor[26], inl[:LABEL_127] ; operand, left, right, addr
mov var[64][stor[25]], stor[25] ; source, dest
memcpy 0x2, inl[:LABEL_128[:LABEL_128[stor[24]]]], stor[27] ; size, src, dest
jmp_cmp <=, stor[27], 0x24, inl[:LABEL_138] ; operand, left, right, addr
mov 0x24, stor[27] ; source, dest
LABEL_138:
jmp_cmp <=, stor[28], 0x4, inl[:LABEL_139] ; operand, left, right, addr
mov 0x4, stor[28] ; source, dest
LABEL_139:
call Scus94491BpeSegment_8002::scriptAddSobjTextbox, stor[26], stor[25], 0x121, stor[27], stor[28], inl[:LABEL_77[:LABEL_77[stor[24]]]] ; index, submapObjectIndex, packedData, width, height, text
LABEL_127:
mov stor[26], stor[24] ; source, dest
return
data 0x208
data 0x0
data 0x2000018
data 0xc30238
data 0x2000018
data 0x2000019
data 0x30242
data 0x2000019
data 0x900000b
data 0x11b
data 0x2000018
data 0x341
data 0x2000018
data 0x4
data 0x900fff8
data 0x140
data 0x9000009
data 0x0
data 0xc30238
data 0x2000018
data 0x2000019
data 0x30242
data 0x2000019
data 0x900fffc
data 0x49

; SUBROUTINE
LABEL_74:
mov var[64][stor[25]], stor[25] ; source, dest
call SMap::FUN_800df9a8, stor[25], stor[27], stor[27], stor[27], stor[28] ; scriptIndex, x0, y0, x1, y1
jmp_cmp >, 0x82, stor[28], inl[:LABEL_75] ; operand, left, right, addr
call Scus94491BpeSegment_8002::FUN_80029c98, 0x5, stor[25] ; index, value
jmp_cmp !=, 0, stor[25], inl[:LABEL_76] ; operand, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x5, 0x1011, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_77[:LABEL_77[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_76:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0x38, 0x24, 0x4, inl[:LABEL_77[:LABEL_77[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
jmp inl[:LABEL_96] ; addr
LABEL_75:
call Scus94491BpeSegment_8002::FUN_80029c98, 0x6, stor[25] ; index, value
jmp_cmp !=, 0, stor[25], inl[:LABEL_97] ; operand, right, addr
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x6, 0x1011, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_77[:LABEL_77[stor[24]]]] ; index, packedData, x, y, width, height, text
LABEL_97:
call Scus94491BpeSegment_8002::scriptAddTextbox, 0x4, 0x400, 0xb6, 0xb8, 0x24, 0x4, inl[:LABEL_77[:LABEL_77[stor[24]]]] ; index, packedData, x, y, width, height, text
mov 0x4, stor[24] ; source, dest
LABEL_96:
return

; SUBROUTINE
LABEL_102:
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x5 ; index
call Scus94491BpeSegment_8002::scriptDeallocateTextbox, 0x6 ; index
return
ENTRYPOINT_0:
ENTRYPOINT_1:
ENTRYPOINT_2:
ENTRYPOINT_3:
ENTRYPOINT_4:
ENTRYPOINT_5:
ENTRYPOINT_6:
ENTRYPOINT_7:
ENTRYPOINT_8:
ENTRYPOINT_9:
ENTRYPOINT_10:
ENTRYPOINT_11:
ENTRYPOINT_12:
ENTRYPOINT_13:
ENTRYPOINT_14:
ENTRYPOINT_15:
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov var[65], stor[23] ; source, dest
incr stor[stor[stor[0], 23], 8] ; operand
gosub_table stor[stor[stor[0], 23], 31], inl[:LABEL_16] ; index, table
LABEL_158:
gosub_table stor[stor[stor[0], 23], 31], inl[:LABEL_34] ; index, table
yield
jmp inl[:LABEL_158] ; addr

; SUBROUTINE TABLE
LABEL_16:
rel :JMP_664_0
rel :JMP_664_1
rel :JMP_664_2
rel :JMP_664_3

; SUBROUTINE
JMP_664_0:
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df530, 0x0 ; value
call SMap::FUN_800df410, 0x0 ; value
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
call SMap::FUN_800de4b4, inl[:LABEL_32] ; p0
mov 0x0, stor[15] ; source, dest
mov 0x0, stor[14] ; source, dest
jmp_cmp >, 0, var[67], inl[:LABEL_33] ; operand, right, addr
gosub inl[:LABEL_23] ; addr
LABEL_33:
return
LABEL_32:
data 0xf
data 0x0
data 0xb
data 0x0
data 0xffffffff

; SUBROUTINE
JMP_664_1:
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df530, 0x0 ; value
call SMap::FUN_800df410, 0x0 ; value
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
call SMap::FUN_800de4b4, inl[:LABEL_30] ; p0
mov 0x0, stor[15] ; source, dest
jmp_cmp >, 0, var[67], inl[:LABEL_31] ; operand, right, addr
gosub inl[:LABEL_23] ; addr
LABEL_31:
return
LABEL_30:
data 0xf
data 0x0
data 0xb
data 0x0
data 0xffffffff

; SUBROUTINE
JMP_664_2:
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df530, 0x0 ; value
call SMap::FUN_800df410, 0x0 ; value
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
call SMap::FUN_800de4b4, inl[:LABEL_28] ; p0
jmp_cmp >, 0, var[67], inl[:LABEL_29] ; operand, right, addr
gosub inl[:LABEL_23] ; addr
LABEL_29:
return
LABEL_28:
data 0xf
data 0x0
data 0xb
data 0x0
data 0xe
data 0x0
data 0xffffffff

; SUBROUTINE
JMP_664_3:
call SMap::scriptEnableShadow, stor[0] ; sobjIndex
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df530, 0x0 ; value
call SMap::FUN_800df410, 0x0 ; value
call SMap::scriptSetModelRotate, stor[0], 0x0, 0x0, 0x0 ; scriptIndex, x, y, z
call SMap::FUN_800de4b4, inl[:LABEL_21] ; p0
jmp_cmp >, 0, var[67], inl[:LABEL_22] ; operand, right, addr
gosub inl[:LABEL_23] ; addr
LABEL_22:
return
LABEL_21:
data 0xf
data 0x0
data 0xb
data 0x0
data 0xe
data 0x0
data 0xffffffff

; SUBROUTINE TABLE
LABEL_34:
rel :JMP_878_0
rel :JMP_878_1
rel :JMP_878_2
rel :JMP_878_3

; SUBROUTINE
JMP_878_0:
gosub inl[:LABEL_39] ; addr
call SMap::FUN_800df4d0, stor[11] ; value
jmp_cmp ==, 0xe, stor[11], inl[:LABEL_144] ; operand, left, right, addr
jmp inl[:LABEL_145] ; addr
LABEL_144:
incr stor[14] ; operand
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::scriptSelfGetSobjAnimation, stor[12] ; animIndex
rand 0xa, stor[13] ; bound, dest
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
jmp_cmp <=, 0x4, stor[14], inl[:LABEL_146] ; operand, left, right, addr
jmp_cmp <=, 0x5, stor[13], inl[:LABEL_147] ; operand, left, right, addr
mov 0x3, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_126] ; addr
jmp inl[:LABEL_148] ; addr
LABEL_147:
mov 0x5, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_126] ; addr
jmp inl[:LABEL_148] ; addr
LABEL_146:
mov 0x7, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_126] ; addr
LABEL_148:
yield
call Scus94491BpeSegment_8002::FUN_80029c98, 0x0, stor[25] ; index, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_149] ; operand, left, right, addr
jmp inl[:LABEL_148] ; addr
LABEL_149:
jmp_cmp ==, 0x1, stor[12], inl[:LABEL_150] ; operand, left, right, addr
jmp_cmp ==, 0x2, stor[12], inl[:LABEL_151] ; operand, left, right, addr
LABEL_150:
mov 0x14, stor[25] ; source, dest
jmp inl[:LABEL_152] ; addr
LABEL_151:
mov 0xa, stor[25] ; source, dest
LABEL_152:
call SMap::scriptSelfLoadSobjAnimation, stor[12] ; animIndex
call SMap::scriptSelfFacePoint, 0xffffffc6, 0x0, 0xfffffde9 ; x, y, z
call SMap::FUN_800df440, 0xffffffc6, 0x0, 0xfffffde9, stor[25] ; x, y, z, i_144
wait stor[25] ; frames
jmp_cmp <=, 0x4, stor[14], inl[:LABEL_153] ; operand, left, right, addr
jmp_cmp <=, 0x5, stor[13], inl[:LABEL_154] ; operand, left, right, addr
call SMap::scriptSelfLoadSobjAnimation, 0x7 ; animIndex
jmp inl[:LABEL_155] ; addr
LABEL_154:
call SMap::scriptSelfLoadSobjAnimation, 0x7 ; animIndex
jmp inl[:LABEL_155] ; addr
LABEL_153:
call SMap::scriptSelfLoadSobjAnimation, 0x9 ; animIndex
mov 0x14, stor[25] ; source, dest
wait stor[25] ; frames
mov 0x8, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_126] ; addr
jmp inl[:LABEL_155] ; addr
LABEL_155:
yield
call Scus94491BpeSegment_8002::FUN_80029c98, 0x0, stor[25] ; index, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_156] ; operand, left, right, addr
LABEL_157:
yield
call SMap::FUN_800df228, stor[26] ; value
jmp_cmp ==, 0x0, stor[26], inl[:LABEL_157] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x1 ; value
jmp inl[:LABEL_155] ; addr
LABEL_156:
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df1f8, 0x0 ; value
LABEL_145:
return

; SUBROUTINE
JMP_878_1:
gosub inl[:LABEL_39] ; addr
call SMap::FUN_800df4d0, stor[11] ; value
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
jmp_cmp ==, 0xa, stor[11], inl[:LABEL_51] ; operand, left, right, addr
jmp inl[:LABEL_52] ; addr
LABEL_51:
mov 0x0, stor[15] ; source, dest
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x8, stor[25] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_53] ; operand, left, right, addr
LABEL_64:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x0, 0x1 ; flag, value
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call SMap::FUN_800df530, 0x1 ; value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x1, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_54] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x2, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_55] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x3, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_56] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x4, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_57] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x5, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_58] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x6, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_59] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x7, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_60] ; operand, left, right, addr
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x8, stor[25] ; flag, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_61] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
call SMap::FUN_800df1f8, 0x0 ; value
jmp inl[:LABEL_52] ; addr
LABEL_54:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_121] ; operand, left, right, addr
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
call SMap::scriptSelfFacePoint, 0x190, 0x0, 0x101 ; x, y, z
call SMap::scriptSelfLoadSobjAnimation, 0x3 ; animIndex
sub 0x32, stor[14] ; amount, operand
call SMap::FUN_800df440, 0x0, 0x0, stor[14], 0x28 ; x, y, z, i_144
jmp inl[:LABEL_63] ; addr
LABEL_121:
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0xc, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0xd, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0xe, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_122] ; operand, left, right, addr
jmp inl[:LABEL_54] ; addr
LABEL_122:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_123] ; operand, left, right, addr
jmp inl[:LABEL_54] ; addr
LABEL_123:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_124] ; operand, left, right, addr
jmp inl[:LABEL_54] ; addr
LABEL_124:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x1, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_55:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_117] ; operand, left, right, addr
mov 0x1e, stor[25] ; source, dest
wait stor[25] ; frames
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
call SMap::scriptSelfLoadSobjAnimation, 0x7 ; animIndex
jmp inl[:LABEL_69] ; addr
LABEL_117:
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x16, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x17, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x18, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_118] ; operand, left, right, addr
jmp inl[:LABEL_55] ; addr
LABEL_118:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_119] ; operand, left, right, addr
jmp inl[:LABEL_55] ; addr
LABEL_119:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_120] ; operand, left, right, addr
jmp inl[:LABEL_55] ; addr
LABEL_120:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x2, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_56:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_113] ; operand, left, right, addr
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0xa ; animIndex
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
call SMap::FUN_800df440, 0x14, stor[13], 0xfffffd2b, 0xf ; x, y, z, i_144
jmp inl[:LABEL_63] ; addr
LABEL_113:
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x20, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x21, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x22, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_114] ; operand, left, right, addr
jmp inl[:LABEL_56] ; addr
LABEL_114:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_115] ; operand, left, right, addr
jmp inl[:LABEL_56] ; addr
LABEL_115:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_116] ; operand, left, right, addr
jmp inl[:LABEL_56] ; addr
LABEL_116:
mov 0x0, stor[15] ; source, dest
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x3, 0x1 ; flag, value
jmp inl[:LABEL_64] ; addr
LABEL_57:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_107] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x5 ; animIndex
mov 0x0, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_74] ; addr
jmp inl[:LABEL_108] ; addr
LABEL_107:
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x2a, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x2b, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x2c, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_110] ; operand, left, right, addr
jmp inl[:LABEL_57] ; addr
LABEL_110:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_111] ; operand, left, right, addr
jmp inl[:LABEL_57] ; addr
LABEL_111:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_112] ; operand, left, right, addr
jmp inl[:LABEL_57] ; addr
LABEL_112:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x4, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_58:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_103] ; operand, left, right, addr
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x6 ; animIndex
jmp inl[:LABEL_69] ; addr
LABEL_103:
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x34, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x35, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x36, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_104] ; operand, left, right, addr
jmp inl[:LABEL_58] ; addr
LABEL_104:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_105] ; operand, left, right, addr
jmp inl[:LABEL_58] ; addr
LABEL_105:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_106] ; operand, left, right, addr
jmp inl[:LABEL_58] ; addr
LABEL_106:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x5, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_59:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_73] ; operand, left, right, addr
mov 0xf, stor[25] ; source, dest
call SMap::scriptRotateSobj, stor[0], 0x0, 0x800, 0x0, stor[25] ; scriptIndex, x, y, z, frames
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x1 ; animIndex
wait stor[25] ; frames
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
mov 0x1, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_74] ; addr
jmp inl[:LABEL_98] ; addr
LABEL_73:
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x3e, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x3f, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x40, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_99] ; operand, left, right, addr
jmp inl[:LABEL_59] ; addr
LABEL_99:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_100] ; operand, left, right, addr
jmp inl[:LABEL_59] ; addr
LABEL_100:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_101] ; operand, left, right, addr
jmp inl[:LABEL_59] ; addr
LABEL_101:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x6, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
gosub inl[:LABEL_102] ; addr
jmp inl[:LABEL_64] ; addr
LABEL_60:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_68] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x8 ; animIndex
jmp inl[:LABEL_69] ; addr
LABEL_68:
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x48, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x49, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x4a, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_70] ; operand, left, right, addr
jmp inl[:LABEL_60] ; addr
LABEL_70:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_71] ; operand, left, right, addr
jmp inl[:LABEL_60] ; addr
LABEL_71:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_72] ; operand, left, right, addr
jmp inl[:LABEL_60] ; addr
LABEL_72:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x7, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_61:
yield
jmp_cmp ==, 0x1, stor[15], inl[:LABEL_62] ; operand, left, right, addr
call SMap::scriptReadModelPosition, stor[0], stor[12], stor[13], stor[14] ; scriptIndex, x, y, z
mov 0x19, stor[25] ; source, dest
wait stor[25] ; frames
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
call SMap::FUN_800df530, 0x0 ; value
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x2 ; animIndex
call SMap::scriptSelfFacePoint, 0xffffffef, 0x0, 0xfffffcd1 ; x, y, z
call SMap::FUN_800df440, 0xffffffef, 0x0, 0xfffffcd1, 0xa ; x, y, z, i_144
jmp inl[:LABEL_63] ; addr
LABEL_62:
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x52, stor[25] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x53, stor[26] ; flag, value
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0x54, stor[27] ; flag, value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_65] ; operand, left, right, addr
jmp inl[:LABEL_61] ; addr
LABEL_65:
jmp_cmp ==, 0x1, stor[26], inl[:LABEL_66] ; operand, left, right, addr
jmp inl[:LABEL_61] ; addr
LABEL_66:
jmp_cmp ==, 0x1, stor[27], inl[:LABEL_67] ; operand, left, right, addr
jmp inl[:LABEL_61] ; addr
LABEL_67:
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x8, 0x1 ; flag, value
mov 0x0, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_53:
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x1 ; disabled
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x9, 0x1 ; flag, value
call SMap::scriptSelfAttachCameraToSobj, 0x0 ; attach
call SMap::scriptSelfLoadSobjAnimation, 0x0 ; animIndex
LABEL_125:
yield
call Scus94491BpeSegment::scriptReadGlobalFlag1, 0xa, stor[25] ; flag, value
jmp_cmp !=, 0x1, stor[25], inl[:LABEL_125] ; operand, left, right, addr
call SMap::scriptSelfAttachCameraToSobj, 0x1 ; attach
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x9 ; animIndex
mov 0x2, stor[24] ; source, dest
mov 0x0, stor[25] ; source, dest
gosub inl[:LABEL_126] ; addr
LABEL_142:
yield
call Scus94491BpeSegment_8002::FUN_80029c98, 0x0, stor[25] ; index, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_140] ; operand, left, right, addr
LABEL_141:
yield
call SMap::FUN_800df228, stor[25] ; value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_141] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x1 ; value
jmp inl[:LABEL_142] ; addr
LABEL_140:
mov 0xa, stor[25] ; source, dest
call SMap::scriptRotateSobj, stor[0], 0x0, 0x800, 0x0, stor[25] ; scriptIndex, x, y, z, frames
wait stor[25] ; frames
call SMap::FUN_800df1f8, 0x0 ; value
call SMap::scriptSelfLoadSobjAnimation, 0x2 ; animIndex
call SMap::scriptSelfFacePoint, 0xffffffef, 0x0, 0xfffffcd1 ; x, y, z
call SMap::FUN_800df440, 0xffffffef, 0x0, 0xfffffcd1, 0xa ; x, y, z, i_144
LABEL_143:
yield
call SMap::FUN_800df620, stor[25] ; value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_143] ; operand, left, right, addr
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0x9, 0x0 ; flag, value
call Scus94491BpeSegment::scriptSetGlobalFlag1, 0xa, 0x0 ; flag, value
call Scus94491BpeSegment::scriptSetIndicatorsDisabled, 0x0 ; disabled
jmp inl[:LABEL_52] ; addr
LABEL_63:
yield
call SMap::FUN_800df620, stor[25] ; value
jmp_cmp ==, 0x1, stor[25], inl[:LABEL_63] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x1 ; value
mov 0x1, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
LABEL_69:
yield
call SMap::FUN_800df228, stor[25] ; value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_69] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x1 ; value
mov 0x1, stor[15] ; source, dest
jmp inl[:LABEL_64] ; addr
data 0x0
data 0xc30238
data 0x2000018
data 0x2000019
data 0x20341
data 0x0
data 0x2000019
data 0x900fd3a
data 0x0
data 0x740138
data 0x2000019
data 0x20341
data 0x1
data 0x2000019
data 0x900fffd
data 0x630138
data 0x1
data 0x208
data 0x1
data 0x200000f
data 0x140
data 0x900ffec
LABEL_108:
yield
call Scus94491BpeSegment_8002::FUN_80029c98, stor[24], stor[25] ; index, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_64] ; operand, left, right, addr
LABEL_109:
yield
call SMap::FUN_800df228, stor[25] ; value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_109] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x1 ; value
mov 0x1, stor[15] ; source, dest
jmp inl[:LABEL_108] ; addr
LABEL_98:
yield
call Scus94491BpeSegment_8002::FUN_80029c98, stor[24], stor[25] ; index, value
jmp_cmp ==, 0x0, stor[25], inl[:LABEL_64] ; operand, left, right, addr
call SMap::FUN_800df1f8, 0x1 ; value
mov 0x1, stor[15] ; source, dest
jmp inl[:LABEL_98] ; addr
LABEL_52:
return

; SUBROUTINE
JMP_878_2:
gosub inl[:LABEL_39] ; addr
call SMap::FUN_800df4d0, stor[11] ; value
return

; SUBROUTINE
JMP_878_3:
gosub inl[:LABEL_39] ; addr
call SMap::FUN_800df4d0, stor[11] ; value
return

; SUBROUTINE
LABEL_23:
call SMap::FUN_800df4d0, stor[11] ; value
jmp_cmp ==, 0xc, stor[11], inl[:LABEL_24] ; operand, left, right, addr
jmp_cmp ==, 0xb, stor[11], inl[:LABEL_25] ; operand, left, right, addr
jmp_cmp ==, 0xe, stor[11], inl[:LABEL_26] ; operand, left, right, addr
jmp inl[:LABEL_27] ; addr
LABEL_24:
call SMap::scriptSelfFacePoint, 0x7, 0x0, 0xfffffd0f ; x, y, z
jmp inl[:LABEL_27] ; addr
LABEL_25:
call SMap::scriptSelfFacePoint, 0x1a0, 0x0, 0xfc ; x, y, z
jmp inl[:LABEL_27] ; addr
LABEL_26:
call SMap::scriptSelfFacePoint, 0xffffffa6, 0x0, 0xfffffe26 ; x, y, z
jmp inl[:LABEL_27] ; addr
LABEL_27:
return
LABEL_77:
rel :PTR_1840_0
rel :PTR_1840_1
rel :PTR_1840_2
rel :PTR_1840_3
rel :PTR_1840_4
rel :PTR_1840_5
rel :PTR_1840_6
rel :PTR_1840_7
rel :PTR_1840_8
LABEL_128:
rel :PTR_1864_0
rel :PTR_1864_1
rel :PTR_1864_2
rel :PTR_1864_3
rel :PTR_1864_4
rel :PTR_1864_5
rel :PTR_1864_6
rel :PTR_1864_7
rel :PTR_1864_8
PTR_1840_3:
data str[<speed=0><colour=5>Hellena<colour=0> is not th]
PTR_1840_12:
data str[ is not this way.]
PTR_1840_4:
data str[<speed=0>What am I hesitating about.]
PTR_1840_5:
data str[<speed=0>This road leads to the <colour=5>Prairie<colour=0>.]
data 0x1
PTR_1840_6:
data str[<speed=0><colour=5>Hellena<colour=0> should be<line>in this direction.]
PTR_1864_6:
data 0x12
data 0x2
PTR_1840_7:
data str[<speed=0>What am I hesitating ab]
PTR_1840_16:
data str[esitating about?]
PTR_1840_8:
data str[<speed=0>There is nothing I can do but go.]
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0x450016
data 0x4b003d
data 0x4c0007
data 0x4c0047
data 0x160047
data 0xa0ff
data 0x18
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff0017
data 0xf
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff0018
data 0xf
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff0019
data 0xf
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff001a
data 0xf
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff001b
data 0xf
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff001c
data 0xf
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x7004b
data 0x47004c
data 0x47004c
data 0xa0ff001d
data 0xf
data 0x1
data 0x31a500
data 0x390040
data 0x390046
data 0x35a1ff
data 0x390040
data 0x4c
data 0x4b0041
data 0x20002
data 0x50002
data 0xa0ff
data 0xb
data 0x2
PTR_1840_0:
data str[<speed=0>Dart<line>It's coming from the<line><colour=5>Forest<colour=0>.]
PTR_1864_0:
data 0x14
data 0x3
data 0x2aa500
data 0x4e0039
data 0x4c0041
data 0xa1ff0052
data 0x4c0027
data 0x4b0000
data 0x3d003d
data 0x4b0045
data 0x4c0000
data 0x390040
data 0x4c
data 0x40004c
data 0x3d
data 0x450027
data 0x3d0048
data 0x41004a
data 0x440039
data 0x390000
data 0x45004a
data 0xa1ff0051
data 0x4b0041
data 0x3b0000
data 0x450039
data 0x3d0048
data 0x3c
data 0x3d0040
data 0x3d004a
data 0x2
data 0x4c0027
data 0x4b0009
data 0x4c0000
data 0x470047
data 0x4a0000
data 0x4b0041
data 0x510043
data 0x3ea1ff
data 0x4a0047
data 0x4d0000
data 0x2004b
data 0xa0ff
data 0x1f
data 0x4
PTR_1840_1:
data str[<speed=0>Dart<line>Yeah.<line>Let's take another route.]
PTR_1864_1:
data 0x19
data 0x3
PTR_1840_2:
data str[<speed=0>It's too risky to go through the<line><colour=5>Forest<colour=0>. Let's take another<line>route.]
PTR_1864_2:
data 0x20
data 0x3
data 0x6b002
data 0xa0ff0006
data 0x2
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x470045
data 0x51004a
data 0x3c0007
data 0x4a004d
data 0x17004c
data 0xa0ff
data 0x12
data 0x1
data 0x27b000
data 0x400000
data 0x4e0039
data 0x3d
data 0x470046
data 0x4c0000
data 0x450041
data 0x3d
data 0x47004c
data 0x3ca1ff
data 0x39003d
data 0x44
data 0x41004f
data 0x40004c
data 0x510000
data 0x4d0047
data 0xa0ff0006
data 0x11
data 0x2
data 0x27b001
data 0x4c
data 0x3d004a
data 0x410045
data 0x3c0046
data 0x4b
data 0x3d0045
data 0x20002
data 0x20002
data 0xa0ff
data 0x11
data 0x1
data 0x22a500
data 0x4a0039
data 0xa1ff004c
data 0x2a000a
data 0x39003d
data 0x3d004e
data 0x310000
data 0x390040
data 0x390046
data 0x390000
data 0x470044
data 0x3d0046
data 0xa0006
data 0xa0ff
data 0x14
data 0x2
data 0x22a500
data 0x4a0039
data 0xa1ff004c
data 0x390026
data 0x3f0046
data 0x410000
data 0x46
data 0x40004c
data 0x4a003d
data 0x1003d
data 0x27a1ff
data 0x440009
data 0x44
data 0x3d003f
data 0x4c
data 0x470051
data 0x4d
data 0x4d0047
data 0x4c
data 0x4a003e
data 0x450047
data 0x4c0000
data 0x3d0040
data 0x3d004a
data 0xa0ff0002
data 0x1c
data 0x3
data 0x22a500
data 0x4a0039
data 0xa1ff004c
data 0x390026
data 0x3f0046
data 0x410000
data 0x46
data 0x40004c
data 0x4a003d
data 0x1003d
data 0x27a1ff
data 0x440009
data 0x44
data 0x3d003f
data 0x4c
data 0x470051
data 0x4d
data 0x4d0047
data 0x4c
data 0x4a003e
data 0x450047
data 0x4c0000
data 0x3d0040
data 0x3d004a
data 0xa0ff0002
data 0x1c
data 0x3
data 0x35b001
data 0x410039
data 0x6004c
data 0xa0ff
data 0x5
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x470045
data 0x51004a
data 0x4b0007
data 0x4d003c
data 0x4c004a
data 0xa0ff0017
data 0x13
data 0x1
data 0x21b000
data 0x4c004d
data 0x410000
data 0x4c
data 0x4d0047
data 0x6004c
data 0x2aa1ff
data 0x39003d
data 0x3d004e
data 0x310000
data 0x390040
data 0x390046
data 0x390000
data 0x470044
data 0x3d0046
data 0x60006
data 0xa0ff
data 0x13
data 0x2
data 0x32b000
data 0x410040
data 0x4b
data 0x39004f
data 0x60051
data 0x320000
data 0x410040
data 0x4b
data 0x39004f
data 0x60051
data 0xa0ff0006
data 0x14
data 0x1
data 0x37b001
data 0x3d003d
data 0x60043
data 0xa0ff
data 0x5
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x470045
data 0x51004a
data 0x310007
data 0x390040
data 0x460051
data 0x180039
data 0xa0ff
data 0x14
data 0x1
data 0x4d003c
data 0x450045
data 0x70051
data 0x3d0045
data 0x470045
data 0x51004a
data 0x310007
data 0x390040
data 0x460051
data 0x190039
data 0xa0ff
data 0x14
data 0x1
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x27a1ff
data 0x440000
data 0x4b0047
data 0x4c
data 0x40004c
data 0x3d
data 0x49004b
data 0x41004d
data 0x4a004a
data 0x44003d
data 0x2
data 0x40002d
data 0x4f0000
data 0x44003d
data 0x20044
data 0xa0ff
data 0x1d
data 0x2
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x27a1ff
data 0x46
data 0x40004c
data 0x4b003d
data 0x3d
data 0x4a004c
data 0x4d0047
data 0x44003a
data 0x3c003d
data 0x4c0000
data 0x450041
data 0x4b003d
data 0x1
data 0x470051
data 0xa1ff004d
data 0x390040
data 0x3d004e
data 0x4c0000
data 0x47
data 0x4a0048
data 0x4c0047
data 0x3b003d
data 0x4c
data 0x470051
data 0x4a004d
data 0x3d004b
data 0x3e0044
data 0xa1ff0002
data 0x400035
data 0x4c0039
data 0x3c0000
data 0x47
data 0x470051
data 0x4d
data 0x40004c
data 0x460041
data 0x50043
data 0x350000
data 0x460039
data 0x390046
data 0x3a0000
data 0x51004d
data 0x4ba1ff
data 0x450047
data 0x4c003d
data 0x410040
data 0x3f0046
data 0xa0ff0005
data 0x1c
data 0x5
data 0x2cb000
data 0x10047
data 0x4c0000
data 0x390040
data 0x430046
data 0x2004b
data 0x20a1ff
data 0x51004d
data 0x4b0000
data 0x450047
data 0x4c003d
data 0x410040
data 0x3f0046
data 0xa0ff0002
data 0xe
data 0x2
data 0x390022
data 0x4c004a
data 0x2ca1ff
data 0x10047
data 0x4c0000
data 0x390040
data 0x430046
data 0x2004b
data 0xa0ff
data 0xb
data 0x2
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x27a1ff
data 0x4b0000
data 0x3d003d
data 0x2
data 0x40002d
data 0x4f0000
data 0x44003d
data 0x20044
data 0x210000
data 0x450047
data 0x3d
data 0x3f0039
data 0x410039
data 0x20046
data 0x27a1ff
data 0x440009
data 0x44
data 0x3d004c
data 0x3b0039
data 0x40
data 0x470051
data 0x4d
data 0x470040
data 0x4f
data 0x47004c
data 0x4d0000
data 0x3d004b
data 0x4ca1ff
data 0x3d0040
data 0x410000
data 0x3d004c
data 0x4b0045
data 0xa0ff0002
data 0x1b
data 0x4
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x22a1ff
data 0x460047
data 0x4c0009
data 0x510000
data 0x4d0047
data 0x4f0000
data 0x460039
data 0x390046
data 0x430000
data 0x470046
data 0x4f
data 0x470040
data 0x4f
data 0x47004c
data 0x4da1ff
data 0x3d004b
data 0x4c0000
data 0x3d0040
data 0x410000
data 0x3d004c
data 0x4b0045
data 0xa1ff0005
data 0x27
data 0x39003b
data 0x46
data 0x3d004c
data 0x3b0039
data 0x40
data 0x470051
data 0x4d
data 0x40004c
data 0x4c0039
data 0xa0ff0002
data 0x1b
data 0x4
data 0x2cb000
data 0x10047
data 0x4c0000
data 0x390040
data 0x430046
data 0x2004b
data 0x37a1ff
data 0x4b003d
data 0x1
data 0x440048
data 0x39003d
data 0x3d004b
data 0xa0ff0002
data 0xc
data 0x2
data 0x390022
data 0x4c004a
data 0x2ca1ff
data 0x10047
data 0x4c0000
data 0x390040
data 0x430046
data 0x2004b
data 0xa0ff
data 0xb
data 0x2
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x27a1ff
data 0x4b0000
data 0x3d003d
data 0x2
data 0x470021
data 0x3d0045
data 0x390000
data 0x39003f
data 0x460041
data 0xa1ff0002
data 0x90027
data 0x440044
data 0x4c0000
data 0x39003d
data 0x40003b
data 0x510000
data 0x4d0047
data 0x400000
data 0x4f0047
data 0x4c0000
data 0xa1ff0047
data 0x4b004d
data 0x3d
data 0x40004c
data 0x3d
data 0x4c0041
data 0x45003d
data 0x2004b
data 0xa0ff
data 0x15
data 0x4
data 0x390022
data 0x4c004a
data 0x37a1ff
data 0x4b003d
data 0x1
data 0x440048
data 0x39003d
data 0x3d004b
data 0xa0ff0002
data 0xc
data 0x2
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x26a1ff
data 0x4a003d
data 0x3d
data 0x3d004f
data 0x3f0000
data 0x60047
data 0xa0ff
data 0xb
data 0x2
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x2aa1ff
data 0x4c003d
data 0x4b0009
data 0x3a0000
data 0x3f003d
data 0x460041
data 0xa0ff0006
data 0xc
data 0x2
data 0x3d002b
data 0x3b004a
data 0x390040
data 0x4c0046
data 0x21a1ff
data 0x450047
data 0x3d
data 0x3f0039
data 0x410039
data 0x20046
data 0x27a1ff
data 0x440009
data 0x44
data 0x3d004c
data 0x3b0039
data 0x40
data 0x470051
data 0x4d
data 0x470040
data 0x4f
data 0x47004c
data 0x4d0000
data 0x3d004b
data 0x4c0000
data 0x3d0040
data 0x41a1ff
data 0x3d004c
data 0x4b0045
data 0x390000
data 0x510046
data 0x4c0000
data 0x450041
data 0x3d
data 0x470051
data 0x4d
data 0x39004f
data 0x4c0046
data 0xa0ff0002
data 0x1d
data 0x4
